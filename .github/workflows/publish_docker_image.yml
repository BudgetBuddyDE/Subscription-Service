name: Build & Publish Docker Image

on:
    workflow_dispatch:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+'

env:
    IMAGE_NAME: ghcr.io/budgetbuddyde/subscription-service

jobs:
    build_image:
        name: Build Docker Image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Build Image
              run: |
                  rm .npmrc 
                  echo $'@kleithor:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken='$NPM_TOKEN >> .npmrc
                  docker build --secret id=npm,src=.npmrc . -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
                  docker build . -t ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
                  mkdir -p artifacts
                  docker save ${{ env.IMAGE_NAME }}:${{ github.ref_name }} > artifacts/docker-image.tar
              env:
                  DOCKER_BUILDKIT: 1
                  NPM_TOKEN: ${{ secrets.PAT }}

            - name: Save Image
              uses: actions/upload-artifact@v2
              with:
                  name: docker-artifact
                  path: artifacts
                  retention-days: 1

    push_image:
        needs: build_image
        name: Push Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: Retrieve Docker Image
              uses: actions/download-artifact@v2
              with:
                  name: docker-artifact
                  path: artifacts

            - name: Load Image
              run: |
                  cd artifacts
                  docker load < docker-image.tar

            - name: Login
              run: |
                  echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ secrets.DOCKER_USER }} --password-stdin

            - name: Push Image
              run: |
                  docker push ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
                  docker tag ${{ env.IMAGE_NAME }}:${{ github.ref_name }} ${{ env.IMAGE_NAME }}:latest
                  docker push ${{ env.IMAGE_NAME }}:latest

    trigger_deployment:
        needs: push_image
        name: Trigger deployment
        runs-on: ubuntu-latest
        steps:
            - name: Dispatch
              uses: peter-evans/repository-dispatch@v2
              with:
                  token: ${{ secrets.PAT }}
                  event-type: trigger_deployment

    cleanup:
        needs: push_image
        name: Cleanup
        runs-on: ubuntu-latest
        steps:
            - name: Delete Artifact
              uses: geekyeggo/delete-artifact@v1
              with:
                  name: docker-artifact
